{%  extends 'layout.twig' %}

{% block content %}

<div class="card border-0 shadow-sm overflow-hidden mb-2">
    <div class="text-white bg-primary card-header py-3">
        <div class="row align-items-center">
            <div class="col">
                RuneAd Full Server List
            </div>
            <div class="col text-right text-white">
                Currently tracking <strong class="text-success">{{ server_count }}</strong> servers!
            </div>
        </div>
    </div>

    {% set start_rank = servers.firstItem() %}

    <table class="table mb-0" style="line-height:1em;">
        <thead class="thead-{{ theme }}">
            <tr>
                <th class="text-left py-2 small border-0">Server</th>
                <th class="text-left py-2 small border-0">Status</th>
                <th class="text-left py-2 small border-0">Votes</th>
            </tr>
        </thead>

        {% for server in servers.items() %}
        {% set server_url = friendlyTitle(server.id~' '~server.title) %}

        {% set isPremium = server.premium_expires > time() %}
        {% set class = isPremium ? 'bg-premium' : '' %}
        
        <tr id="server" class="{{ class }}">

            <td class="py-4">{{ start_rank }} )
                <a href="{{ url('details/'~server_url) }}">
                    {% if server.title|length > 40 %}
                    {{ substr(server.title, 0, 40)~'...' }}
                    {% else %}
                    {{ server.title }}
                    {% endif %}
                </a>
            </td>

             <td class="text-center small pr-1">
                {% if server.ping == -1  %}
                <span class="badge badge-danger status-badge small"
                    data-toggle="tooltip" data-title="{{ elapsed(server.last_ping) }}">
                    Offline
                </span>
                {% else %}
                <span class="badge badge-success status-badge" 
                    data-toggle="tooltip" data-title="{{ elapsed(server.last_ping) }}">
                    Online
                </span>
                {% endif %}
            </td>

            <td>
                <p class="mb-0" id="votes">{{ server.votes|number_format }}</p>
            </td>


        </tr>
        {% set start_rank = start_rank + 1 %}
        {% else %}
        <tr>
            <td colspan=5 class="p-4">Nothing to see here.</td>
        </tr>
        {% endfor %}
    </table>
</div>


{% set totalPages = servers.lastPage() %}
{% set current = servers.currentPage() %}

{% set pageUrl = revision is defined ? url('rev-'~revision.revision~'/') : url('')  %}

{% if is_mobile == false %}
{% set recaptcha_key = constant('recaptcha')['public'] %}

<script src="https://www.google.com/recaptcha/api.js?render={{ recaptcha_key }}" async></script>

<script>
document.addEventListener('DOMContentLoaded', function(event) {
    let locked = false;
    $('.vote-btn').click(function(event) {
        event.preventDefault();
        locked = true;
        
        let btn = $(this);
        let txt = $(this).text();
        let id  = $(this).data("id");
        
        btn.html('{{ icon("three-dots", 16, 16) }}');
        btn.addClass("disabled");
        btn.removeClass("btn-success btn-danger").addClass("btn-primary");
        grecaptcha.ready(function() {
            grecaptcha.execute("{{ recaptcha_key }}", {
                action: 'homepage'
            }).then(function(token) {
                $.ajaxq('VoteQueue', {
                    url: '{{ url("servers/addvote") }}',
                    data: {
                        server_id: id,
                        token: token
                    },
                    type: 'POST',
                    complete: function (data) {
        
                    },
                    success: function (json) {
                        if (json.success) {
                            let votes = json.votes;
                            let votecnt = btn.closest("td").find("#votes");
                            votecnt.html(votes);
                        }
                        
                        btn.removeClass("btn-primary btn-danger btn-success")
                            .addClass("btn-"+(json.success ? 'success' : 'danger'));
        
                        btn.html(json.success
                            ? '{{ icon("check", 16, 16) }}'
                            : '{{ icon("x", 16, 16) }}');
                        setTimeout(function() {
                            btn.removeClass("btn-primary btn-danger disabled")
                                .addClass("btn-primary");
                            btn.html('{{ icon("check2-square", 16, 16) }}');
                            locked = false;
                        }, 1000);
                    },
                    error: function(data) {
                        locked = false;
                        console.log(data.responseText);
                    }
                });
            });
        });
    });
});
</script>
{% endif %}
{%  endblock %}