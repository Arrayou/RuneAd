document.addEventListener('DOMContentLoaded',function(event){$('[data-toggle="tooltip"]').tooltip();$('#toTop').on('click',function(e){e.preventDefault();var target=this.hash;var $target=$(target);$('html, body').stop().animate({'scrollTop':0},900,'swing');});let dropdown=$('.navbar .dropdown');dropdown.mouseenter(function(){let menu=$(this).find(".dropdown-menu");menu.addClass("show");$(this).addClass("show");});dropdown.mouseleave(function(){let menu=$(this).find(".dropdown-menu");menu.removeClass("show");$(this).removeClass("show");});$('#darkmode').click(function(event){event.preventDefault();let cookie=Cookies.get("darkmode");if(cookie){Cookies.remove("darkmode");}else{Cookies.set("darkmode",1,{expires:365});}
window.location.reload();});$(document).find('img').each(function(index,element){let pc=$(this).closest(".card");if(pc){$(this).addClass("img-fluid");}});refresh_handler=function(e){var elements=document.querySelectorAll("img");for(var i=0;i<elements.length;i++){var boundingClientRect=elements[i].getBoundingClientRect();var inViewport=boundingClientRect.top<window.innerHeight;if(elements[i].hasAttribute("data-src")&&inViewport){let src=elements[i].getAttribute("data-src");elements[i].setAttribute("src",src);elements[i].removeAttribute("data-src");}}};window.addEventListener('scroll',refresh_handler);window.addEventListener('load',refresh_handler);window.addEventListener('resize',refresh_handler);});(function(factory){if(typeof define==='function'&&define.amd){define(['jquery'],factory);}else if(typeof module==='object'&&module.exports){module.exports=factory(require('jquery'));}else{factory(jQuery);}}(function($){var queues={};var activeReqs={};$.ajaxq=function(qname,opts){if(typeof opts==="undefined"){throw("AjaxQ: queue name is not provided");}
var deferred=$.Deferred(),promise=deferred.promise();promise.success=promise.done;promise.error=promise.fail;promise.complete=promise.always;var deferredOpts=typeof opts==='function';var clonedOptions=!deferredOpts?$.extend(true,{},opts):null;enqueue(function(){var jqXHR=$.ajax.apply(window,[deferredOpts?opts():clonedOptions]);jqXHR.done(function(){deferred.resolve.apply(this,arguments);});jqXHR.fail(function(){deferred.reject.apply(this,arguments);});jqXHR.always(dequeue);return jqXHR;});return promise;function enqueue(cb){if(!queues[qname]){queues[qname]=[];var xhr=cb();activeReqs[qname]=xhr;}
else{queues[qname].push(cb);}}
function dequeue(){if(!queues[qname]){return;}
var nextCallback=queues[qname].shift();if(nextCallback){var xhr=nextCallback();activeReqs[qname]=xhr;}
else{delete queues[qname];delete activeReqs[qname];}}};$.each(["getq","postq"],function(i,method){$[method]=function(qname,url,data,callback,type){if($.isFunction(data)){type=type||callback;callback=data;data=undefined;}
return $.ajaxq(qname,{type:method==="postq"?"post":"get",url:url,data:data,success:callback,dataType:type});};});var isQueueRunning=function(qname){return(queues.hasOwnProperty(qname)&&queues[qname].length>0)||activeReqs.hasOwnProperty(qname);};var isAnyQueueRunning=function(){for(var i in queues){if(isQueueRunning(i))return true;}
return false;};$.ajaxq.isRunning=function(qname){if(qname)return isQueueRunning(qname);else return isAnyQueueRunning();};$.ajaxq.getActiveRequest=function(qname){if(!qname)throw("AjaxQ: queue name is required");return activeReqs[qname];};$.ajaxq.abort=function(qname){if(!qname)throw("AjaxQ: queue name is required");var current=$.ajaxq.getActiveRequest(qname);delete queues[qname];delete activeReqs[qname];if(current)current.abort();};$.ajaxq.clear=function(qname){if(!qname){for(var i in queues){if(queues.hasOwnProperty(i)){queues[i]=[];}}}
else{if(queues[qname]){queues[qname]=[];}}};}));